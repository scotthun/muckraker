[{"C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\reportWebVitals.js":"1","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\Spacer.js":"2","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\PieChart.js":"3","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\data\\prepare_data.js":"4","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\index.js":"5","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\Homepage.js":"6","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\Dashboard.js":"7","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\LookupLegislators.js":"8","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\Introduction.js":"9","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\StackedBarChart.js":"10","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\App.js":"11","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\VoteSearchBar.js":"12","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\VoteSummary.js":"13","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\LookupModule.js":"14","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\TabMenu.js":"15","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\Layout.js":"16"},{"size":362,"mtime":1611098455656,"results":"17","hashOfConfig":"18"},{"size":572,"mtime":1612922935174,"results":"19","hashOfConfig":"18"},{"size":3205,"mtime":1612502473841,"results":"20","hashOfConfig":"18"},{"size":8251,"mtime":1613637748923,"results":"21","hashOfConfig":"18"},{"size":500,"mtime":1611098455656,"results":"22","hashOfConfig":"18"},{"size":2003,"mtime":1613546892499,"results":"23","hashOfConfig":"18"},{"size":487,"mtime":1613549234963,"results":"24","hashOfConfig":"18"},{"size":585,"mtime":1613549273903,"results":"25","hashOfConfig":"18"},{"size":1822,"mtime":1612925788246,"results":"26","hashOfConfig":"18"},{"size":1996,"mtime":1612922935174,"results":"27","hashOfConfig":"18"},{"size":206,"mtime":1612230418590,"results":"28","hashOfConfig":"18"},{"size":3571,"mtime":1613548775576,"results":"29","hashOfConfig":"18"},{"size":1758,"mtime":1612922935176,"results":"30","hashOfConfig":"18"},{"size":3309,"mtime":1613549618187,"results":"31","hashOfConfig":"18"},{"size":8370,"mtime":1613638716057,"results":"32","hashOfConfig":"18"},{"size":5061,"mtime":1612922935171,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1wout8c",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\reportWebVitals.js",[],["73","74"],"C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\Spacer.js",["75","76"],"\r\nimport React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  \r\n  spacer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n    width: '100%'\r\n  },\r\n  \r\n}));\r\n\r\nexport default function Spacer() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div className={classes.spacer} />\r\n  );\r\n}",["77","78"],"C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\PieChart.js",[],"C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\data\\prepare_data.js",["79","80","81","82","83","84","85","86","87","88","89","90","91","92","93"],"C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\index.js",[],"C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\Homepage.js",["94","95"],"C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\Dashboard.js",[],"C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\LookupLegislators.js",[],"C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\Introduction.js",[],"C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\StackedBarChart.js",[],"C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\App.js",["96"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport Homepage from '../src/components/Homepage.js'\r\n\r\nfunction App() {\r\n  return (\r\n    <Homepage>\r\n\r\n    </Homepage>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["97","98"],"C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\VoteSearchBar.js",["99"],"import React, { useState, useEffect  } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function VoteSearchBar(props) {\r\n  \r\n  const [currMemberID, setCurrMemberID] = React.useState(\"\");\r\n  const [currMemberName, setCurrMemberName] = React.useState(\"\");\r\n  const [voteMessage, setVoteMessage] = React.useState(\"\");\r\n  const [members, setMembers] = React.useState(null);\r\n\r\n  const handleCurrMemberID = (event, value) => {\r\n    var newMember = value === null ? \"\" : value.id;\r\n    setCurrMemberID(newMember);\r\n\r\n    var newMemberName = value === null ? \"\" : value.name;\r\n    setCurrMemberName(newMemberName);\r\n  };\r\n\r\n  const handleVoteMessage = () => {\r\n    var url = require('./../data/key.json');\r\n    url = url['url']+ '/getMemberRecentVotes?id='+ currMemberID;\r\n    fetch(url)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n      setVoteMessage(getMemberVoteResult(data));\r\n    });\r\n  };\r\n\r\n  const clearVoteMessage = () => {\r\n    setVoteMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMembers(props?.members)\r\n  },[props?.members]);\r\n\r\n  function getMemberVoteResult(memberObject) {\r\n    if(currMemberID === \"\"){\r\n      return \"Please select a \" + props.type + \" to see how they voted.\";\r\n    }\r\n    var memberVotes = memberObject[\"results\"][0][\"votes\"];\r\n    for(let vote of memberVotes){\r\n      if(props.source === vote.vote_uri){\r\n        return currMemberName + \" voted: \" + vote.position;\r\n      }\r\n    }\r\n    return \"Not Found\"\r\n  }\r\n  \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" align='center'> Use the search bar below to see how a specific {props.type} voted.</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          {members !== undefined ? \r\n            <Autocomplete\r\n            options={props.members}\r\n            getOptionLabel={(option) => option.name}\r\n            renderInput={(params) => <TextField {...params} label={props.type} variant=\"outlined\" />}\r\n            onChange={handleCurrMemberID}\r\n            />\r\n            :\r\n            <span></span>\r\n          }\r\n          \r\n        </Grid>\r\n      </Grid>\r\n      <Grid container >\r\n      <Grid item xs={1}>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <Button variant=\"contained\" color=\"primary\" fullWidth={true} onClick={handleVoteMessage}>\r\n            Search\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <Button variant=\"contained\" color=\"secondary\" fullWidth={true} onClick={clearVoteMessage}>\r\n            Clear\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" align='center'>{voteMessage}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\VoteSummary.js",["100","101"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  voteWrapper: {\r\n    border: '1px solid #3f51b5',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    backgroundColor: '#3f51b5'\r\n  },\r\n  voteSectionTitle: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    backgroundColor: '#3f51b5',\r\n    color : '#fff',\r\n    overflowWrap: 'break-word',\r\n    wordWrap: 'break-word',\r\n  },\r\n  voteSectionContent: {\r\n    width: '98%',\r\n    marginLeft: '1%',\r\n    overflowWrap: 'break-word',\r\n    wordWrap: 'break-word',\r\n  },\r\n}));\r\n\r\nexport default function VoteSummary(props) {\r\n  \r\n  function getFormattedObject() {\r\n\r\n    var newObject = new Object();\r\n    for(let key of Object.keys(props.data)){\r\n      \r\n      if (typeof props.data[key] === 'string'){\r\n        if(props.data[key].length === 0 ){\r\n          continue;\r\n        }\r\n      }\r\n\r\n      if(props.data[key] === null){\r\n        continue;\r\n      }\r\n\r\n      if(props.data[key] === undefined){\r\n        continue;\r\n      }\r\n      \r\n      newObject[key.replace(/_/g, \" \").toUpperCase()] = props.data[key];\r\n    }\r\n    return newObject;\r\n  }\r\n\r\n  function getRows(){\r\n    var items = new Array();\r\n    let summary = getFormattedObject();\r\n\r\n    for(var key in summary){\r\n      items.push(key);\r\n      items.push(summary[key]);\r\n    }\r\n    return items;\r\n  }\r\n  \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.voteWrapper}>\r\n      \r\n\r\n        {getRows().map((row, index) => (\r\n            <div key={index} className={index % 2 === 0 ? classes.voteSectionTitle : classes.voteSectionContent}>\r\n              { row }\r\n            </div>\r\n        ))\r\n        }\r\n      \r\n    </div>\r\n  );\r\n}","C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\LookupModule.js",["102","103"],"C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\TabMenu.js",["104","105","106","107","108","109"],"C:\\Users\\Owner\\Desktop\\Projects\\muckraker\\muckraker\\frontend\\src\\components\\Layout.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":6,"column":7,"nodeType":"116","messageId":"117","endLine":6,"endColumn":18},{"ruleId":"114","severity":1,"message":"118","line":26,"column":9,"nodeType":"116","messageId":"117","endLine":26,"endColumn":14},{"ruleId":"110","replacedBy":"119"},{"ruleId":"112","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":58,"column":21,"nodeType":"123","messageId":"124","endLine":58,"endColumn":32},{"ruleId":"125","severity":1,"message":"126","line":59,"column":28,"nodeType":"123","messageId":"124","endLine":59,"endColumn":40},{"ruleId":"125","severity":1,"message":"126","line":62,"column":25,"nodeType":"123","messageId":"124","endLine":62,"endColumn":37},{"ruleId":"121","severity":1,"message":"122","line":81,"column":21,"nodeType":"123","messageId":"124","endLine":81,"endColumn":32},{"ruleId":"125","severity":1,"message":"126","line":82,"column":28,"nodeType":"123","messageId":"124","endLine":82,"endColumn":40},{"ruleId":"125","severity":1,"message":"126","line":85,"column":25,"nodeType":"123","messageId":"124","endLine":85,"endColumn":37},{"ruleId":"125","severity":1,"message":"126","line":107,"column":26,"nodeType":"123","messageId":"124","endLine":107,"endColumn":38},{"ruleId":"125","severity":1,"message":"126","line":169,"column":17,"nodeType":"123","messageId":"124","endLine":169,"endColumn":29},{"ruleId":"114","severity":1,"message":"127","line":197,"column":5,"nodeType":"116","messageId":"117","endLine":197,"endColumn":9},{"ruleId":"121","severity":1,"message":"122","line":199,"column":28,"nodeType":"123","messageId":"124","endLine":199,"endColumn":39},{"ruleId":"121","severity":1,"message":"122","line":205,"column":27,"nodeType":"123","messageId":"124","endLine":205,"endColumn":38},{"ruleId":"121","severity":1,"message":"122","line":211,"column":24,"nodeType":"123","messageId":"124","endLine":211,"endColumn":35},{"ruleId":"121","severity":1,"message":"122","line":217,"column":23,"nodeType":"123","messageId":"124","endLine":217,"endColumn":34},{"ruleId":"121","severity":1,"message":"122","line":233,"column":31,"nodeType":"123","messageId":"124","endLine":233,"endColumn":42},{"ruleId":"121","severity":1,"message":"122","line":248,"column":19,"nodeType":"123","messageId":"124","endLine":248,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":42,"column":16,"nodeType":"123","messageId":"124","endLine":42,"endColumn":28},{"ruleId":"128","severity":1,"message":"129","line":60,"column":6,"nodeType":"130","endLine":60,"endColumn":8,"suggestions":"131"},{"ruleId":"114","severity":1,"message":"132","line":1,"column":8,"nodeType":"116","messageId":"117","endLine":1,"endColumn":12},{"ruleId":"110","replacedBy":"133"},{"ruleId":"112","replacedBy":"134"},{"ruleId":"114","severity":1,"message":"135","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":33,"column":21,"nodeType":"123","messageId":"124","endLine":33,"endColumn":33},{"ruleId":"121","severity":1,"message":"122","line":56,"column":17,"nodeType":"123","messageId":"124","endLine":56,"endColumn":28},{"ruleId":"114","severity":1,"message":"136","line":9,"column":24,"nodeType":"116","messageId":"117","endLine":9,"endColumn":46},{"ruleId":"137","severity":1,"message":"138","line":98,"column":34,"nodeType":"139","endLine":98,"endColumn":187},{"ruleId":"114","severity":1,"message":"135","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"140","line":81,"column":10,"nodeType":"116","messageId":"117","endLine":81,"endColumn":18},{"ruleId":"114","severity":1,"message":"141","line":82,"column":10,"nodeType":"116","messageId":"117","endLine":82,"endColumn":25},{"ruleId":"114","severity":1,"message":"142","line":83,"column":10,"nodeType":"116","messageId":"117","endLine":83,"endColumn":21},{"ruleId":"114","severity":1,"message":"143","line":84,"column":10,"nodeType":"116","messageId":"117","endLine":84,"endColumn":20},{"ruleId":"114","severity":1,"message":"144","line":112,"column":12,"nodeType":"116","messageId":"117","endLine":112,"endColumn":35},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'drawerWidth' is assigned a value but never used.","Identifier","unusedVar","'theme' is assigned a value but never used.",["145"],["146"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-new-object","The object literal notation {} is preferrable.","'vote' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDataFromBackend'. Either include it or remove the dependency array.","ArrayExpression",["147"],"'logo' is defined but never used.",["145"],["146"],"'useState' is defined but never used.","'generateLegislatorData' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'senators' is assigned a value but never used.","'representatives' is assigned a value but never used.","'senateVotes' is assigned a value but never used.","'houseVotes' is assigned a value but never used.","'generateMemberFromArray' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},"Update the dependencies array to be: [getDataFromBackend]",{"range":"150","text":"151"},[1689,1691],"[getDataFromBackend]"]